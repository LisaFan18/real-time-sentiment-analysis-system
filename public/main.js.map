{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/models/event.ts","webpack:///./src/app/services/socket.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <p>sssssssss</p>\\n  <button type=\\\"button\\\" class=\\\"btn btn-success pull-right\\\" (click)=\\\"startStream()\\\">Start</button>\\n\\n    {{ msg?.data }}\\n\\n</div>\\n\"","import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { SocketService } from './services/socket.service';\nimport { Event } from './models/event';\nimport { Http, Response, Headers } from '@angular/http';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  messages: JSON[] = [];\n  ioConnection: any;\n  msg: any;\n  constructor(private http: Http, private socketService: SocketService) {\n  }\n\n\n  ngOnInit(): void {\n    this.initIoConnection();\n  }\n\n  private initIoConnection(): void {\n    console.log('init connection');\n    this.socketService.initSocket();\n    this.socketService.onMessage()\n      .subscribe((message: any) => {\n          this.msg = message;\n      });\n\n    this.socketService.onEvent(Event.CONNECT)\n      .subscribe(() => {\n        console.log('connected');\n      });\n\n    this.socketService.onEvent(Event.DISCONNECT)\n      .subscribe(() => {\n        console.log('disconnected');\n      });\n  }\n\n  private startStream(): void {\n    // const requestOptions = {\n    //   headers: new Headers({ 'Content-Type': 'application/json' })\n    // };\n       this.http.get('/api/stream')\n      .toPromise()\n      .then();\n\n  }\n\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { AppComponent } from './app.component';\nimport { HttpModule } from \"@angular/http\";\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    HttpModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","export enum Event {\n    CONNECT = 'connect',\n    DISCONNECT = 'disconnect'\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport * as io from 'socket.io-client';\nimport { Event } from '../models/event';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocketService {\n\n  private url = 'http://127.0.0.1:5000/streaming_socket';\n  private socket;\n\n  public initSocket(): void {\n      this.socket = io.connect(this.url);\n      console.log('init socket');\n  }\n\n\n\n  public onMessage(): Observable<JSON> {\n    return new Observable<JSON>(observer => {\n      this.socket.on('message', (data) => {\n        observer.next(data);\n        console.log(\"SASAS\");\n        console.log(data);\n        console.log(typeof(data));\n        });\n    });\n  }\n\n\n  public onEvent(event: Event): Observable<any> {\n      return new Observable<Event>(observer => {\n          this.socket.on(event, () => observer.next());\n      });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","/* (ignored) */"],"sourceRoot":""}